/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Sun Nov 17 14:22:25 2019. */

#ifndef PB_POLARIS_POLARIS_PB_H_INCLUDED
#define PB_POLARIS_POLARIS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _POLARIS_boardVitals_M {
    uint32_t voltage;
    uint32_t current;
/* @@protoc_insertion_point(struct:POLARIS_boardVitals_M) */
} POLARIS_boardVitals_M;

typedef struct _POLARIS_deviceInfo_M {
    uint32_t deviceName;
/* @@protoc_insertion_point(struct:POLARIS_deviceInfo_M) */
} POLARIS_deviceInfo_M;

typedef struct _POLARIS_motorSetSpeed_M {
    uint32_t motorNumber;
    pb_size_t which_subMessage;
    union {
        uint32_t rpm;
        uint32_t percent;
    } subMessage;
/* @@protoc_insertion_point(struct:POLARIS_motorSetSpeed_M) */
} POLARIS_motorSetSpeed_M;

typedef struct _POLARIS_allMessages_M {
    pb_size_t which_subMessage;
    union {
        POLARIS_deviceInfo_M MC_deviceInfo;
        POLARIS_boardVitals_M MC_boardVitals;
        POLARIS_deviceInfo_M PB_deviceInfo;
        POLARIS_deviceInfo_M JETSON_deviceInfo;
        POLARIS_motorSetSpeed_M JETSON_motorSetSpeed;
    } subMessage;
/* @@protoc_insertion_point(struct:POLARIS_allMessages_M) */
} POLARIS_allMessages_M;

/* Default values for struct fields */

/* Initializer values for message structs */
#define POLARIS_deviceInfo_M_init_default        {0}
#define POLARIS_boardVitals_M_init_default       {0, 0}
#define POLARIS_motorSetSpeed_M_init_default     {0, 0, {0}}
#define POLARIS_allMessages_M_init_default       {0, {POLARIS_deviceInfo_M_init_default}}
#define POLARIS_deviceInfo_M_init_zero           {0}
#define POLARIS_boardVitals_M_init_zero          {0, 0}
#define POLARIS_motorSetSpeed_M_init_zero        {0, 0, {0}}
#define POLARIS_allMessages_M_init_zero          {0, {POLARIS_deviceInfo_M_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define POLARIS_boardVitals_M_voltage_tag        1
#define POLARIS_boardVitals_M_current_tag        2
#define POLARIS_deviceInfo_M_deviceName_tag      1
#define POLARIS_motorSetSpeed_M_rpm_tag          2
#define POLARIS_motorSetSpeed_M_percent_tag      3
#define POLARIS_motorSetSpeed_M_motorNumber_tag  1
#define POLARIS_allMessages_M_MC_deviceInfo_tag  1
#define POLARIS_allMessages_M_MC_boardVitals_tag 2
#define POLARIS_allMessages_M_PB_deviceInfo_tag  21
#define POLARIS_allMessages_M_JETSON_deviceInfo_tag 41
#define POLARIS_allMessages_M_JETSON_motorSetSpeed_tag 42

/* Struct field encoding specification for nanopb */
extern const pb_field_t POLARIS_deviceInfo_M_fields[2];
extern const pb_field_t POLARIS_boardVitals_M_fields[3];
extern const pb_field_t POLARIS_motorSetSpeed_M_fields[4];
extern const pb_field_t POLARIS_allMessages_M_fields[6];

/* Maximum encoded size of messages (where known) */
#define POLARIS_deviceInfo_M_size                6
#define POLARIS_boardVitals_M_size               12
#define POLARIS_motorSetSpeed_M_size             12
#define POLARIS_allMessages_M_size               15

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define POLARIS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
